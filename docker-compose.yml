services:
  postgres:
    image: postgres:16-alpine
    container_name: scanlin-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-scanlin}
      POSTGRES_USER: ${POSTGRES_USER:-scanlin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-scanlin}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 10

  gateway:
    build:
      context: .
      dockerfile: api/Dockerfile
      # (opcional) si quieres pasar el build-arg desde compose:
      args:
        DEBUG_TOOLS: ${DEBUG_TOOLS:-0}
    image: scanlin-gateway:latest
    container_name: scanlin-gateway-1
    ports: []   # con macvlan, nada que publicar
    environment:
      DATABASE_URL: "postgresql+asyncpg://${POSTGRES_USER:-scanlin}:${POSTGRES_PASSWORD:-scanlin}@postgres:5432/${POSTGRES_DB:-scanlin}"
      OUI_MANUF: /app/data/manuf
      OUI_URL: ""        # ← vacío para NO descargar CSV
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      backend:
      lan:
        ipv4_address: ${SCANLIN_IP}

volumes:
  db_data:

networks:
  backend:
    driver: bridge
  lan:
    external: true
    name: scanlin_macvlan
